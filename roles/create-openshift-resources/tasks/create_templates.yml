---

- name: Set Default template Facts
  set_fact:
    template: "{{ template_item }}"

- name: Fail for both template.name and template.filename set
  fail: msg="This role requires either template.name or template.filename to be set and non empty. They are mutually exclusive."
  when:
  - template.name is defined
  - template.name != ''
  - template.filename is defined
  - template.filename != ''

- name: Fail for both template.name and template.filename missing
  fail: msg="This role requires either template.name or template.filename to be set and non empty. They are mutually exclusive."
  when:
  - template.name is not defined or template.name == ''
  - template.filename is not defined or template.filename == ''

- name: "Apply {{ template.filename }} Remote Template"
  command: >
     bash -c "{{ openshift.common.client_binary }} process {{ template.name }} {{ template.parameters|default([]) | oc_param_string }} {{ template.paramFiles|default([]) | oc_options_string('param-file') }} | {{ openshift.common.client_binary }} apply -f - -n {{ project.name }}"
  when:
  - template.name is defined and template.name != ''

- name: "Apply {{ template.filename }} Local Template"
  command: >
     bash -c "{{ openshift.common.client_binary }} process -f {{ template.filename }} {{ template.parameters|default([]) | oc_param_string }} {{ template.paramFiles|default([]) | oc_options_string('param-file') }} | {{ openshift.common.client_binary }} apply -f - -n {{ project.name }}"
  when:
  - template.filename is defined and template.filename != ''

- name: "Create ConfigMaps"
  command: >
     bash -c "{{ openshift.common.client_binary }} create configmap {{ template.parameters.NAME }} {{ template.configMaps| oc_options_string('from-file') }} -o yaml --dry-run | {{ openshift.common.client_binary }} apply -f - -n {{ project.name }}"
  when:
  - template.configMaps is defined and template.configMaps | length > 0